{"ast":null,"code":"import * as AuthActions from './authActions';\nexport const setupSocket = token => {\n  return dispatch => {\n    const socket = new WebSocket('ws://localhost:8080');\n\n    socket.onopen = () => {\n      if (token) {\n        socket.send(JSON.stringify({\n          type: 'CONNECT_WITH_TOKEN',\n          data: {\n            token: token,\n            userId: userId\n          }\n        }));\n      } else {\n        dispatch({\n          type: 'SETUP_SOCKET',\n          payload: socket\n        });\n      }\n    };\n\n    socket.onmessage = message => {\n      console.log('Message', message);\n      let data = JSON.parse(message.data);\n\n      switch (data.type) {\n        case 'LOGGEDIN':\n          dispatch(AuthActions.loggedIn(data));\n          break;\n\n        case 'GOT_USERS':\n          dispatch({\n            type: 'GOT_USERS',\n            payload: data.data.users\n          });\n          break;\n\n        case 'ADD_THREAD':\n          dispatch({\n            type: 'ADD_THREAD',\n            payload: data.data\n          });\n\n        default: //do nothing\n\n      }\n    };\n  };\n};","map":{"version":3,"sources":["C:/Users/NOYON/projects/Chat-Application/chat/src/store/actions/chatActions.js"],"names":["AuthActions","setupSocket","token","dispatch","socket","WebSocket","onopen","send","JSON","stringify","type","data","userId","payload","onmessage","message","console","log","parse","loggedIn","users"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AAEA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAClC,SAAOC,QAAQ,IAAI;AACf,UAAMC,MAAM,GAAG,IAAIC,SAAJ,CAAc,qBAAd,CAAf;;AACAD,IAAAA,MAAM,CAACE,MAAP,GAAgB,MAAM;AAClB,UAAGJ,KAAH,EAAS;AACLE,QAAAA,MAAM,CAACG,IAAP,CAAYC,IAAI,CAACC,SAAL,CAAe;AACvBC,UAAAA,IAAI,EAAE,oBADiB;AAEvBC,UAAAA,IAAI,EAAE;AACFT,YAAAA,KAAK,EAAEA,KADL;AAEFU,YAAAA,MAAM,EAAEA;AAFN;AAFiB,SAAf,CAAZ;AAOH,OARD,MASI;AACAT,QAAAA,QAAQ,CAAC;AACLO,UAAAA,IAAI,EAAE,cADD;AAELG,UAAAA,OAAO,EAAET;AAFJ,SAAD,CAAR;AAIH;AACJ,KAhBD;;AAkBAA,IAAAA,MAAM,CAACU,SAAP,GAAoBC,OAAD,IAAa;AAC5BC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,OAAvB;AACA,UAAIJ,IAAI,GAAGH,IAAI,CAACU,KAAL,CAAWH,OAAO,CAACJ,IAAnB,CAAX;;AACA,cAAOA,IAAI,CAACD,IAAZ;AACI,aAAK,UAAL;AACIP,UAAAA,QAAQ,CAACH,WAAW,CAACmB,QAAZ,CAAqBR,IAArB,CAAD,CAAR;AACA;;AACJ,aAAK,WAAL;AACIR,UAAAA,QAAQ,CAAC;AACLO,YAAAA,IAAI,EAAE,WADD;AAELG,YAAAA,OAAO,EAAEF,IAAI,CAACA,IAAL,CAAUS;AAFd,WAAD,CAAR;AAIA;;AACJ,aAAK,YAAL;AACIjB,UAAAA,QAAQ,CAAC;AACLO,YAAAA,IAAI,EAAE,YADD;AAELG,YAAAA,OAAO,EAAEF,IAAI,CAACA;AAFT,WAAD,CAAR;;AAIJ,gBAfJ,CAgBQ;;AAhBR;AAkBH,KArBD;AAuBH,GA3CD;AA4CH,CA7CM","sourcesContent":["import * as AuthActions from './authActions';\r\n\r\nexport const setupSocket = (token) => {\r\n    return dispatch => {\r\n        const socket = new WebSocket('ws://localhost:8080');\r\n        socket.onopen = () => {\r\n            if(token){\r\n                socket.send(JSON.stringify({\r\n                    type: 'CONNECT_WITH_TOKEN',\r\n                    data: {\r\n                        token: token,\r\n                        userId: userId\r\n                    }\r\n                }))\r\n            }\r\n            else{ \r\n                dispatch({\r\n                    type: 'SETUP_SOCKET',\r\n                    payload: socket\r\n                });\r\n            }\r\n        }\r\n\r\n        socket.onmessage = (message) => {\r\n            console.log('Message', message);\r\n            let data = JSON.parse(message.data);\r\n            switch(data.type){\r\n                case 'LOGGEDIN':\r\n                    dispatch(AuthActions.loggedIn(data));\r\n                    break;\r\n                case 'GOT_USERS':\r\n                    dispatch({\r\n                        type: 'GOT_USERS',\r\n                        payload: data.data.users\r\n                    })\r\n                    break;\r\n                case 'ADD_THREAD':\r\n                    dispatch({\r\n                        type: 'ADD_THREAD',\r\n                        payload: data.data\r\n                    })\r\n                default: \r\n                    //do nothing\r\n            }\r\n        }\r\n\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}