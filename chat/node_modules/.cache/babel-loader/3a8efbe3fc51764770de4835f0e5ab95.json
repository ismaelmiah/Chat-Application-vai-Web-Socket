{"ast":null,"code":"import * as AuthActions from './authActions';\nexport const setupSocket = token => {\n  return dispatch => {\n    const socket = new WebSocket('ws://localhost:8080');\n\n    socket.onopen = () => {\n      if (token) {} else {\n        dispatch({\n          type: 'SETUP_SOCKET',\n          payload: socket\n        });\n      }\n    };\n\n    socket.onmessage = message => {\n      console.log('Message', message);\n      let data = JSON.parse(message.data);\n\n      switch (data.type) {\n        case 'LOGGEDIN':\n          dispatch(AuthActions.loggedIn(data));\n          break;\n\n        case 'GOT_USERS':\n          dispatch({\n            type: 'GOT_USERS',\n            payload: data.data.users\n          });\n          break;\n\n        case 'ADD_THREAD':\n          dispatch({\n            type: 'ADD_THREAD',\n            payload: data.data\n          });\n\n        default: //do nothing\n\n      }\n    };\n  };\n};","map":{"version":3,"sources":["C:/Users/NOYON/projects/Chat-Application/chat/src/store/actions/chatActions.js"],"names":["AuthActions","setupSocket","token","dispatch","socket","WebSocket","onopen","type","payload","onmessage","message","console","log","data","JSON","parse","loggedIn","users"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AAEA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAClC,SAAOC,QAAQ,IAAI;AACf,UAAMC,MAAM,GAAG,IAAIC,SAAJ,CAAc,qBAAd,CAAf;;AACAD,IAAAA,MAAM,CAACE,MAAP,GAAgB,MAAM;AAClB,UAAGJ,KAAH,EAAS,CAER,CAFD,MAGI;AACAC,QAAAA,QAAQ,CAAC;AACLI,UAAAA,IAAI,EAAE,cADD;AAELC,UAAAA,OAAO,EAAEJ;AAFJ,SAAD,CAAR;AAIH;AACJ,KAVD;;AAYAA,IAAAA,MAAM,CAACK,SAAP,GAAoBC,OAAD,IAAa;AAC5BC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,OAAvB;AACA,UAAIG,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWL,OAAO,CAACG,IAAnB,CAAX;;AACA,cAAOA,IAAI,CAACN,IAAZ;AACI,aAAK,UAAL;AACIJ,UAAAA,QAAQ,CAACH,WAAW,CAACgB,QAAZ,CAAqBH,IAArB,CAAD,CAAR;AACA;;AACJ,aAAK,WAAL;AACIV,UAAAA,QAAQ,CAAC;AACLI,YAAAA,IAAI,EAAE,WADD;AAELC,YAAAA,OAAO,EAAEK,IAAI,CAACA,IAAL,CAAUI;AAFd,WAAD,CAAR;AAIA;;AACJ,aAAK,YAAL;AACId,UAAAA,QAAQ,CAAC;AACLI,YAAAA,IAAI,EAAE,YADD;AAELC,YAAAA,OAAO,EAAEK,IAAI,CAACA;AAFT,WAAD,CAAR;;AAIJ,gBAfJ,CAgBQ;;AAhBR;AAkBH,KArBD;AAuBH,GArCD;AAsCH,CAvCM","sourcesContent":["import * as AuthActions from './authActions';\r\n\r\nexport const setupSocket = (token) => {\r\n    return dispatch => {\r\n        const socket = new WebSocket('ws://localhost:8080');\r\n        socket.onopen = () => {\r\n            if(token){\r\n\r\n            }\r\n            else{ \r\n                dispatch({\r\n                    type: 'SETUP_SOCKET',\r\n                    payload: socket\r\n                });\r\n            }\r\n        }\r\n\r\n        socket.onmessage = (message) => {\r\n            console.log('Message', message);\r\n            let data = JSON.parse(message.data);\r\n            switch(data.type){\r\n                case 'LOGGEDIN':\r\n                    dispatch(AuthActions.loggedIn(data));\r\n                    break;\r\n                case 'GOT_USERS':\r\n                    dispatch({\r\n                        type: 'GOT_USERS',\r\n                        payload: data.data.users\r\n                    })\r\n                    break;\r\n                case 'ADD_THREAD':\r\n                    dispatch({\r\n                        type: 'ADD_THREAD',\r\n                        payload: data.data\r\n                    })\r\n                default: \r\n                    //do nothing\r\n            }\r\n        }\r\n\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}