{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\NOYON\\\\projects\\\\Chat-Application\\\\chat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nconst defaultState = {\n  socket: null,\n  message: '',\n  threads: [],\n  currentThread: '',\n  users: []\n};\n\nconst chat = (state = defaultState, action) => {\n  switch (action.type) {\n    case 'SETUP_SOCKET':\n      return _objectSpread({}, state, {\n        socket: action.payload\n      });\n\n    case 'GOT_USERS':\n      console.log('Getting User', action.payload);\n      return _objectSpread({}, state, {\n        users: action.payload\n      });\n\n    case 'ADD_THREAD':\n      return _objectSpread({}, state, {\n        threads: state.threads.filter(t => t.id === action.payload.id).length === 0 ? state.threads.concat(action.payload) : state.threads\n      });\n\n    case 'INITIAL_THREADS':\n      return _objectSpread({}, state, {\n        threads: action.payload\n      });\n\n    case 'ADD_SINGLE_MESSAGE':\n      return _objectSpread({}, state, {\n        threads: state.threads.map(thread => {\n          if (thread.id === action.payload.threadId) {\n            return _objectSpread({}, thread, {\n              Messages: thread.Messages.concat(action.payload.message)\n            });\n          } else {\n            return thread;\n          }\n        })\n      });\n\n    case 'ADD_MESSAGES_TO_THREAD':\n      return _objectSpread({}, state, {\n        threads: state.threads.map(t => {\n          if (t.id === action.payload.threadId) {\n            return _objectSpread({}, t, {\n              Messages: action.payload.messages.concat(t.Messages)\n            });\n          } else {\n            return t;\n          }\n        })\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default chat;","map":{"version":3,"sources":["C:/Users/NOYON/projects/Chat-Application/chat/src/store/reducers/chatReducer.js"],"names":["defaultState","socket","message","threads","currentThread","users","chat","state","action","type","payload","console","log","filter","t","id","length","concat","map","thread","threadId","Messages","messages"],"mappings":";AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,IADS;AAEjBC,EAAAA,OAAO,EAAE,EAFQ;AAGjBC,EAAAA,OAAO,EAAE,EAHQ;AAIjBC,EAAAA,aAAa,EAAE,EAJE;AAKjBC,EAAAA,KAAK,EAAE;AALU,CAArB;;AAQA,MAAMC,IAAI,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAiC;AAC1C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,cAAL;AACI,+BACOF,KADP;AAEIN,QAAAA,MAAM,EAAEO,MAAM,CAACE;AAFnB;;AAIJ,SAAK,WAAL;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BJ,MAAM,CAACE,OAAnC;AACA,+BACOH,KADP;AAEIF,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAFlB;;AAIJ,SAAK,YAAL;AACI,+BACOH,KADP;AAEIJ,QAAAA,OAAO,EAAEI,KAAK,CAACJ,OAAN,CAAcU,MAAd,CAAqBC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASP,MAAM,CAACE,OAAP,CAAeK,EAAlD,EAAsDC,MAAtD,KAAiE,CAAjE,GACLT,KAAK,CAACJ,OAAN,CAAcc,MAAd,CAAqBT,MAAM,CAACE,OAA5B,CADK,GAEPH,KAAK,CAACJ;AAJZ;;AAOJ,SAAK,iBAAL;AACI,+BACOI,KADP;AAEIJ,QAAAA,OAAO,EAAEK,MAAM,CAACE;AAFpB;;AAIJ,SAAK,oBAAL;AACI,+BACOH,KADP;AAEIJ,QAAAA,OAAO,EAAEI,KAAK,CAACJ,OAAN,CAAce,GAAd,CAAkBC,MAAM,IAAI;AACjC,cAAGA,MAAM,CAACJ,EAAP,KAAcP,MAAM,CAACE,OAAP,CAAeU,QAAhC,EAAyC;AACrC,qCACOD,MADP;AAEIE,cAAAA,QAAQ,EAAEF,MAAM,CAACE,QAAP,CAAgBJ,MAAhB,CAAuBT,MAAM,CAACE,OAAP,CAAeR,OAAtC;AAFd;AAIH,WALD,MAMI;AACA,mBAAOiB,MAAP;AACH;AACJ,SAVQ;AAFb;;AAcJ,SAAK,wBAAL;AACI,+BACOZ,KADP;AAEIJ,QAAAA,OAAO,EAAEI,KAAK,CAACJ,OAAN,CAAce,GAAd,CAAkBJ,CAAC,IAAI;AAC5B,cAAGA,CAAC,CAACC,EAAF,KAASP,MAAM,CAACE,OAAP,CAAeU,QAA3B,EAAoC;AAChC,qCACON,CADP;AAEIO,cAAAA,QAAQ,EAAEb,MAAM,CAACE,OAAP,CAAeY,QAAf,CAAwBL,MAAxB,CAA+BH,CAAC,CAACO,QAAjC;AAFd;AAIH,WALD,MAMI;AACA,mBAAOP,CAAP;AACH;AACJ,SAVQ;AAFb;;AAcJ;AACI,aAAOP,KAAP;AAxDR;AA0DH,CA3DD;;AA6DA,eAAeD,IAAf","sourcesContent":["const defaultState = {\r\n    socket: null,\r\n    message: '',\r\n    threads: [],\r\n    currentThread: '',\r\n    users: []\r\n}\r\n\r\nconst chat = (state = defaultState, action) =>{\r\n    switch(action.type){\r\n        case 'SETUP_SOCKET':\r\n            return {\r\n                ...state,\r\n                socket: action.payload\r\n            }\r\n        case 'GOT_USERS':\r\n            console.log('Getting User', action.payload);\r\n            return {\r\n                ...state,\r\n                users: action.payload\r\n            }\r\n        case 'ADD_THREAD':\r\n            return {\r\n                ...state,\r\n                threads: state.threads.filter(t => t.id === action.payload.id).length === 0 ?\r\n                    state.threads.concat(action.payload)\r\n                : state.threads\r\n            }\r\n        \r\n        case 'INITIAL_THREADS':\r\n            return {\r\n                ...state,\r\n                threads: action.payload\r\n            }\r\n        case 'ADD_SINGLE_MESSAGE':\r\n            return{\r\n                ...state,\r\n                threads: state.threads.map(thread => {\r\n                    if(thread.id === action.payload.threadId){\r\n                        return {\r\n                            ...thread,\r\n                            Messages: thread.Messages.concat(action.payload.message)\r\n                        }\r\n                    }\r\n                    else{\r\n                        return thread\r\n                    }\r\n                })\r\n            }\r\n        case 'ADD_MESSAGES_TO_THREAD':\r\n            return {\r\n                ...state,\r\n                threads: state.threads.map(t => {\r\n                    if(t.id === action.payload.threadId){\r\n                        return {\r\n                            ...t,\r\n                            Messages: action.payload.messages.concat(t.Messages)\r\n                        }\r\n                    }\r\n                    else{\r\n                        return t\r\n                    }\r\n                })\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default chat;"]},"metadata":{},"sourceType":"module"}