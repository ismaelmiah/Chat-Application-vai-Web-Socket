{"ast":null,"code":"import * as AuthActions from './authActions';\nexport const setupSocket = () => {\n  return dispatch => {\n    const socket = new WebSocket('ws://localhost:8080');\n\n    socket.onopen = () => {\n      dispatch({\n        type: 'SETUP_SOCKET',\n        payload: socket\n      });\n    };\n\n    socket.onmessage = message => {\n      console.log('Message', message);\n      let data = JSON.parse(message.data);\n\n      switch (data.type) {\n        case 'LOGGEDIN':\n          dispatch(AuthActions.loggedIn(data));\n          break;\n\n        case 'GOT_USERS':\n          console.log('User data', users);\n          dispatch({\n            type: 'GOT_USERS',\n            payload: data.data.users\n          });\n          break;\n\n        default: //do nothing\n\n      }\n    };\n  };\n};","map":{"version":3,"sources":["C:/Users/NOYON/projects/Chat-Application/chat/src/store/actions/chatActions.js"],"names":["AuthActions","setupSocket","dispatch","socket","WebSocket","onopen","type","payload","onmessage","message","console","log","data","JSON","parse","loggedIn","users"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAC7B,SAAOC,QAAQ,IAAI;AACf,UAAMC,MAAM,GAAG,IAAIC,SAAJ,CAAc,qBAAd,CAAf;;AACAD,IAAAA,MAAM,CAACE,MAAP,GAAgB,MAAM;AAClBH,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAE,cADD;AAELC,QAAAA,OAAO,EAAEJ;AAFJ,OAAD,CAAR;AAIH,KALD;;AAOAA,IAAAA,MAAM,CAACK,SAAP,GAAoBC,OAAD,IAAa;AAC5BC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,OAAvB;AACA,UAAIG,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWL,OAAO,CAACG,IAAnB,CAAX;;AACA,cAAOA,IAAI,CAACN,IAAZ;AACI,aAAK,UAAL;AACIJ,UAAAA,QAAQ,CAACF,WAAW,CAACe,QAAZ,CAAqBH,IAArB,CAAD,CAAR;AACA;;AACJ,aAAK,WAAL;AACIF,UAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBK,KAAxB;AACAd,UAAAA,QAAQ,CAAC;AACLI,YAAAA,IAAI,EAAE,WADD;AAELC,YAAAA,OAAO,EAAEK,IAAI,CAACA,IAAL,CAAUI;AAFd,WAAD,CAAR;AAIA;;AACJ,gBAXJ,CAYQ;;AAZR;AAcH,KAjBD;AAmBH,GA5BD;AA6BH,CA9BM","sourcesContent":["import * as AuthActions from './authActions';\r\n\r\nexport const setupSocket = () => {\r\n    return dispatch => {\r\n        const socket = new WebSocket('ws://localhost:8080');\r\n        socket.onopen = () => {\r\n            dispatch({\r\n                type: 'SETUP_SOCKET',\r\n                payload: socket\r\n            });\r\n        }\r\n\r\n        socket.onmessage = (message) => {\r\n            console.log('Message', message);\r\n            let data = JSON.parse(message.data);\r\n            switch(data.type){\r\n                case 'LOGGEDIN':\r\n                    dispatch(AuthActions.loggedIn(data));\r\n                    break;\r\n                case 'GOT_USERS':\r\n                    console.log('User data',users);\r\n                    dispatch({\r\n                        type: 'GOT_USERS',\r\n                        payload: data.data.users\r\n                    })\r\n                    break;\r\n                default: \r\n                    //do nothing\r\n            }\r\n        }\r\n\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}