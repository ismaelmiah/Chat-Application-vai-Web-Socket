{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\NOYON\\\\projects\\\\Chat-Application\\\\chat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\NOYON\\\\projects\\\\Chat-Application\\\\chat\\\\src\\\\components\\\\partials\\\\ThreadView.js\";\nimport React, { Component } from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nclass ThreadView extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.init = () => {\n      let currentThread = this.props.threads.filter(t => t.id === this.props.match.params.threadId)[0];\n\n      if (currentThread) {\n        let skip = currentThread.Messages || 0;\n        this.props.socket.send(JSON.stringify({\n          type: 'THREAD_LOAD',\n          data: {\n            threadId: this.props.match.params.threadId,\n            skip: skip\n          }\n        }));\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.init();\n  }\n\n  componentDidUpdate(props) {\n    if (props.match.params.threadId !== this.props.match.params.threadId) {\n      this.init();\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"main-view\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Hello\");\n  }\n\n}\n\nconst mapStateToProps = state => _objectSpread({}, state.auth, {}, state.chat);\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ThreadView));","map":{"version":3,"sources":["C:/Users/NOYON/projects/Chat-Application/chat/src/components/partials/ThreadView.js"],"names":["React","Component","withRouter","Link","connect","ThreadView","init","currentThread","props","threads","filter","t","id","match","params","threadId","skip","Messages","socket","send","JSON","stringify","type","data","componentDidMount","componentDidUpdate","render","mapStateToProps","state","auth","chat","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,UAAR,EAAoBC,IAApB,QAA+B,kBAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,MAAMC,UAAN,SAAyBJ,SAAzB,CAAkC;AAAA;AAAA;;AAAA,SAW9BK,IAX8B,GAWvB,MAAM;AACT,UAAIC,aAAa,GAAG,KAAKC,KAAL,CAAWC,OAAX,CAAmBC,MAAnB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAAS,KAAKJ,KAAL,CAAWK,KAAX,CAAiBC,MAAjB,CAAwBC,QAAhE,EAA0E,CAA1E,CAApB;;AACA,UAAGR,aAAH,EAAiB;AACb,YAAIS,IAAI,GAAGT,aAAa,CAACU,QAAd,IAA0B,CAArC;AACA,aAAKT,KAAL,CAAWU,MAAX,CAAkBC,IAAlB,CAAuBC,IAAI,CAACC,SAAL,CAAe;AAClCC,UAAAA,IAAI,EAAE,aAD4B;AAElCC,UAAAA,IAAI,EAAE;AACFR,YAAAA,QAAQ,EAAE,KAAKP,KAAL,CAAWK,KAAX,CAAiBC,MAAjB,CAAwBC,QADhC;AAEFC,YAAAA,IAAI,EAAEA;AAFJ;AAF4B,SAAf,CAAvB;AAOH;AACJ,KAvB6B;AAAA;;AAE9BQ,EAAAA,iBAAiB,GAAE;AACf,SAAKlB,IAAL;AACH;;AACDmB,EAAAA,kBAAkB,CAACjB,KAAD,EAAO;AACrB,QAAGA,KAAK,CAACK,KAAN,CAAYC,MAAZ,CAAmBC,QAAnB,KAAgC,KAAKP,KAAL,CAAWK,KAAX,CAAiBC,MAAjB,CAAwBC,QAA3D,EAAoE;AAChE,WAAKT,IAAL;AACH;AACJ;;AAgBDoB,EAAAA,MAAM,GAAE;AACJ,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ;AAKH;;AA/B6B;;AAkClC,MAAMC,eAAe,GAAGC,KAAK,sBACtBA,KAAK,CAACC,IADgB,MAEtBD,KAAK,CAACE,IAFgB,CAA7B;;AAKA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK,EAAL,CAAnC;;AAIA,eAAe5B,OAAO,CAClBuB,eADkB,EAElBI,kBAFkB,CAAP,CAGb7B,UAAU,CAACG,UAAD,CAHG,CAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport {withRouter, Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nclass ThreadView extends Component{\r\n\r\n    componentDidMount(){\r\n        this.init();\r\n    }\r\n    componentDidUpdate(props){\r\n        if(props.match.params.threadId !== this.props.match.params.threadId){\r\n            this.init();\r\n        }\r\n    }\r\n\r\n    init = () => {\r\n        let currentThread = this.props.threads.filter(t => t.id === this.props.match.params.threadId)[0];\r\n        if(currentThread){\r\n            let skip = currentThread.Messages || 0;\r\n            this.props.socket.send(JSON.stringify({\r\n                type: 'THREAD_LOAD',\r\n                data: {\r\n                    threadId: this.props.match.params.threadId,\r\n                    skip: skip\r\n                    }\r\n            }))\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"main-view\">\r\n                Hello\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    ...state.auth,\r\n    ...state.chat\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    \r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withRouter(ThreadView));"]},"metadata":{},"sourceType":"module"}